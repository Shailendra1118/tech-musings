#!/usr/bin/env groovy

@Library('jenkins-shared-library') _

pipeline {

  agent { label 'build' }
  options {
    disableConcurrentBuilds()
  }
  environment {
    VERSION = getSemver('master', '')
  }
  stages {

    stage('Checkout') {
      steps {
        checkoutWithEnv()
      }
    }

    stage('Skip?') {
      steps {
        abortIfGitTagExists env.VERSION
      }
    }

    stage('Setup') {
      steps {
        dockerCompose 'build --pull'
      }
    }

    stage('Unit') {
      steps {
        sh "mkdir -p ./coverage"
        dockerCompose "run --rm -v '${env.WORKSPACE}/coverage:/app/coverage:rw,z' example-pdf-generator-development test"
        sh "sed -i -e 's/\\/app/${env.WORKSPACE.replace('/', '\\/')}/g' coverage/lcov.info" // fix coverage path
      }
    }

    stage('Contract Test') {
      steps {

        dockerCompose 'up -d browserless-chrome'
        script {

          withMasterBranch {
            pactTag = "production"
            pactVersionEnv = ""
          }
          withPullRequestBranch {
            prNumberProperty = env.BRANCH_NAME =~ /(pr|PR)-\d+$/ ? "${env.BRANCH_NAME}" : ""
            pactTag = "${prNumberProperty},develop"
            pactVersionEnv = "${env.BRANCH_NAME}"
          }
        }

          dockerCompose "run \
          -e PORT=3000 \
          -e PACTBROKER=https://pactbroker.example.tools/ \
          -e PR_NUMBER=${pactVersionEnv} \
          -e PACT_TAG=${pactTag} \
          example-pdf-generator-development \
          run test:provider"
      }
    }

    stage('SonarQube') {
      steps {
        sonarScanner env.VERSION
      }
    }

    stage('Publish Docker') {
      steps {
        dockerPublish "docker.example.tools/example-pdf-generator/example-pdf-generator:${env.VERSION}"
        dockerPublish "docker.example.tools/example-pdf-generator/example-pdf-generator-smoke:${env.VERSION}"
      }
    }

    stage('Publish NPM') {
      steps {
        withArtifactoryNPMCredentials {
          dockerCompose "run --rm -v '${env.WORKSPACE}/.npmrc:/app/.npmrc:ro' example-pdf-generator publish --scope @example --tag ${npmTag()}"
        }
      }
    }

    stage('Tag') {
      when { branch 'master' }
      steps {
        pushGitTag env.VERSION
      }
    }
  }
  post {
    always {
      dockerCompose 'down --volumes --remove-orphans'
      dockerCompose 'rm --force'
      slackBuildStatus '#example_example_internal', env.SLACK_USER
    }
  }
}
