buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.21.0"
	}
}


plugins {
	id 'org.springframework.boot' version '2.4.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "com.commercehub.gradle.plugin.avro-base" version "0.9.0"

}

group = 'com.poc.kafka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://packages.confluent.io/maven/' }
	jcenter()
}

ext {
	set('springCloudVersion', "2020.0.0-SNAPSHOT")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-schema:2.2.1.RELEASE'
	implementation 'io.confluent:kafka-avro-serializer:5.5.1'
	implementation 'org.apache.avro:avro:1.9.2'
	implementation 'org.apache.avro:avro-compiler:1.9.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java")
	fieldVisibility = "PRIVATE"
}

compileJava.source(generateAvro.outputs)